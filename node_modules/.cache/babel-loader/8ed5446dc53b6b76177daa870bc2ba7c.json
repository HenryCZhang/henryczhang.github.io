{"ast":null,"code":"import { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent } from \"./Constants\";\nimport { isSsr } from \"../../Utils/Utils\";\n\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\n\nexport class EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchEndHandler = () => this.mouseTouchFinish();\n\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n\n    this.mouseDownHandler = () => this.mouseDown();\n\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n\n    this.themeChangeHandler = e => this.handleThemeChange(e);\n\n    this.oldThemeChangeHandler = e => this.handleThemeChange(e);\n\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n\n  addListeners() {\n    this.manageListeners(true);\n  }\n\n  removeListeners() {\n    this.manageListeners(false);\n  }\n\n  manageListeners(add) {\n    var _a;\n\n    const container = this.container,\n          options = container.actualOptions,\n          detectType = options.interactivity.detectsOn;\n    let mouseLeaveTmpEvent = mouseLeaveEvent;\n\n    if (detectType === \"window\") {\n      container.interactivity.element = window;\n      mouseLeaveTmpEvent = mouseOutEvent;\n    } else if (detectType === \"parent\" && container.canvas.element) {\n      const canvasEl = container.canvas.element;\n      container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n\n    const mediaMatch = !isSsr() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n\n    if (mediaMatch) {\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n      } else if (mediaMatch.addListener !== undefined) {\n        if (add) {\n          mediaMatch.addListener(this.oldThemeChangeHandler);\n        } else {\n          mediaMatch.removeListener(this.oldThemeChangeHandler);\n        }\n      }\n    }\n\n    const interactivityEl = container.interactivity.element;\n\n    if (!interactivityEl) {\n      return;\n    }\n\n    const html = interactivityEl;\n\n    if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n      manageListener(interactivityEl, mouseMoveEvent, this.mouseMoveHandler, add);\n      manageListener(interactivityEl, touchStartEvent, this.touchStartHandler, add);\n      manageListener(interactivityEl, touchMoveEvent, this.touchMoveHandler, add);\n\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, touchEndEvent, this.touchEndHandler, add);\n      } else {\n        manageListener(interactivityEl, touchEndEvent, this.touchEndClickHandler, add);\n        manageListener(interactivityEl, mouseUpEvent, this.mouseUpHandler, add);\n        manageListener(interactivityEl, mouseDownEvent, this.mouseDownHandler, add);\n      }\n\n      manageListener(interactivityEl, mouseLeaveTmpEvent, this.mouseLeaveHandler, add);\n      manageListener(interactivityEl, touchCancelEvent, this.touchCancelHandler, add);\n    }\n\n    if (container.canvas.element) {\n      container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n    }\n\n    if (options.interactivity.events.resize) {\n      if (typeof ResizeObserver !== \"undefined\") {\n        if (this.resizeObserver && !add) {\n          if (container.canvas.element) {\n            this.resizeObserver.unobserve(container.canvas.element);\n          }\n\n          this.resizeObserver.disconnect();\n          delete this.resizeObserver;\n        } else if (!this.resizeObserver && add && container.canvas.element) {\n          this.resizeObserver = new ResizeObserver(entries => {\n            const entry = entries.find(e => e.target === container.canvas.element);\n\n            if (!entry) {\n              return;\n            }\n\n            this.handleWindowResize();\n          });\n          this.resizeObserver.observe(container.canvas.element);\n        }\n      } else {\n        manageListener(window, resizeEvent, this.resizeHandler, add);\n      }\n    }\n\n    if (document) {\n      manageListener(document, visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n\n  handleWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n      delete this.resizeTimeout;\n    }\n\n    this.resizeTimeout = setTimeout(async () => {\n      var _a;\n\n      return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }, 500);\n  }\n\n  handleVisibilityChange() {\n    const container = this.container,\n          options = container.actualOptions;\n    this.mouseTouchFinish();\n\n    if (!options.pauseOnBlur) {\n      return;\n    }\n\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw(true);\n      }\n    }\n  }\n\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n\n  mouseTouchMove(e) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n      return;\n    }\n\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === \"parent\") {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n        const canvasEl = container.canvas.element;\n\n        if (source && target && canvasEl) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          const canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n          };\n        } else {\n          pos = {\n            x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n            y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n            y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n        y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n      };\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = mouseMoveEvent;\n  }\n\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n\n    if (!interactivity) {\n      return;\n    }\n\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n\n  mouseTouchClick(e) {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n\n    if (!mousePosition || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (!plugin.clickPositionValid) {\n        continue;\n      }\n\n      handled = plugin.clickPositionValid(mousePosition);\n\n      if (handled) {\n        break;\n      }\n    }\n\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n\n    mouse.clicking = false;\n  }\n\n  doMouseTouchClick(e) {\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      container.interactivity.mouse.clickPosition = {\n        x: mousePos.x,\n        y: mousePos.y\n      };\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n\n  handleThemeChange(e) {\n    const mediaEvent = e,\n          themeName = mediaEvent.matches ? this.container.options.defaultDarkTheme : this.container.options.defaultLightTheme,\n          theme = this.container.options.themes.find(theme => theme.name === themeName);\n\n    if (theme && theme.default.auto) {\n      this.container.loadTheme(themeName);\n    }\n  }\n\n  handleClickMode(mode) {\n    this.container.handleClickMode(mode);\n  }\n\n}","map":{"version":3,"names":["mouseDownEvent","mouseLeaveEvent","mouseMoveEvent","mouseOutEvent","mouseUpEvent","resizeEvent","touchCancelEvent","touchEndEvent","touchMoveEvent","touchStartEvent","visibilityChangeEvent","isSsr","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","EventListeners","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","themeChangeHandler","handleThemeChange","oldThemeChangeHandler","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","_a","actualOptions","detectType","interactivity","detectsOn","mouseLeaveTmpEvent","window","canvas","canvasEl","parentElement","parentNode","mediaMatch","matchMedia","addListener","removeListener","interactivityEl","html","events","onHover","enable","onClick","style","pointerEvents","resize","ResizeObserver","resizeObserver","unobserve","disconnect","entries","entry","find","target","observe","document","resizeTimeout","clearTimeout","setTimeout","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","_d","_e","_f","_g","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","mediaEvent","themeName","matches","defaultDarkTheme","defaultLightTheme","theme","themes","name","default","auto","loadTheme"],"sources":["/Users/zhangcao/Desktop/ZhangCao_Henry_Portfolio/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js"],"sourcesContent":["import { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nimport { isSsr } from \"../../Utils/Utils\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = !isSsr() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, 500);\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.interactivity.mouse.clickPosition = {\n                x: mousePos.x,\n                y: mousePos.y,\n            };\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, themeName = mediaEvent.matches\n            ? this.container.options.defaultDarkTheme\n            : this.container.options.defaultLightTheme, theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}